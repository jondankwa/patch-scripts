{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red21\green21\blue22;\red69\green73\blue76;\red228\green234\blue244;
\red236\green241\blue247;\red52\green55\blue54;\red77\green80\blue85;\red22\green79\blue199;}
{\*\expandedcolortbl;;\cssrgb\c10588\c10980\c11373;\cssrgb\c34118\c35686\c37255;\cssrgb\c91373\c93333\c96471;
\cssrgb\c94118\c95686\c97647;\cssrgb\c26667\c27843\c27451;\cssrgb\c37255\c38824\c40784;\cssrgb\c9804\c40392\c82353;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid103\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid104\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2880\lin2880 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid203\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid303\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid401\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid402\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid403\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid601\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid602\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid7}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
\pard\pardeftab720\sa320\partightenfactor0

\fs32 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Setting up an AWS FSx file system to be mounted as an NFS share on a Red Hat Enterprise Linux (RHEL) instance, allowing a local user (
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2 ) to have read and write access, involves several steps. This guide will primarily focus on using Amazon FSx for OpenZFS, as it offers a straightforward NFS export experience for Linux clients, but similar principles apply to Amazon FSx for NetApp ONTAP.\
\pard\pardeftab720\sa160\partightenfactor0
\cf2 Key Concepts for User Permissions:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 UID (User ID) and GID (Group ID): NFS traditionally relies on matching UIDs and GIDs between the client and the server for permission checking. For 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2  to have read/write access, its UID and GID on the RHEL instance should ideally match the ownership of the files on the FSx share, or the share's permissions must be configured to allow that UID/GID.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Root Squashing: This is an NFS security feature.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls1\ilvl1
\fs28 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 root_squash
\fs32 \cf2 \cb1 \strokec2  (often default): Maps the remote root user (UID 0) to an anonymous UID/GID (e.g., 65534, often 
\fs28 \cf3 \cb4 \strokec3 nobody
\fs32 \cf2 \cb1 \strokec2 ). This prevents a root user on the client from having root access to the NFS share.\
\ls1\ilvl1
\fs28 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 no_root_squash
\fs32 \cf2 \cb1 \strokec2 : Allows the remote root user to have root privileges on the NFS share. This can be useful for administrative tasks but should be used cautiously.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Permissions on the Mount Point: After mounting, the directory on the FSx file system will need appropriate permissions (e.g., read/write for the 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2 's UID/GID).\
\pard\pardeftab720\sa320\partightenfactor0
\cf2 Here's a step-by-step guide:\
\pard\pardeftab720\sa160\partightenfactor0
\cf2 Phase 1: Set up AWS FSx for OpenZFS File System\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create the FSx for OpenZFS File System:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Navigate to the AWS Management Console and open the Amazon FSx service.\
\ls2\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Click "Create file system" and select "Amazon FSx for OpenZFS."\
\ls2\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Configure the file system:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa160\partightenfactor0
\ls2\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 File system name: Choose a descriptive name.\
\ls2\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Deployment type: Single-AZ or Multi-AZ, based on your availability requirements. Multi-AZ is recommended for production.\
\ls2\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Storage capacity and SSD IOPS: Choose appropriate values for your needs.\
\ls2\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Throughput capacity: Select based on your performance requirements.\
\ls2\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 VPC and Subnets: Select the VPC where your Red Hat Linux instance resides (or will reside). Choose appropriate subnets. For Multi-AZ, select subnets in different Availability Zones.\
\ls2\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Security group: This is crucial. Create a new security group or select an existing one. This security group must allow inbound NFS traffic (TCP/UDP port 2049) from your Red Hat Linux instance's IP address or its security group.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa160\partightenfactor0
\ls2\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Review other settings like encryption (default is KMS), maintenance windows, and tags.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Click "Create file system." Wait for the file system to become available.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create a Volume within the FSx File System:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Once the file system is "Available," select it.\
\ls2\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Go to the "Volumes" tab and click "Create volume."\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Volume name: e.g., 
\fs28 \cf3 \cb4 \strokec3 nfsshare_for_etmuser
\fs32 \cf2 \cb1 \strokec2 .\
\ls2\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Volume path: This will be part of the NFS export path, e.g., 
\fs28 \cf3 \cb4 \strokec3 /fsx/mydata
\fs32 \cf2 \cb1 \strokec2  (the 
\fs28 \cf3 \cb4 \strokec3 /fsx
\fs32 \cf2 \cb1 \strokec2  prefix is standard).\
\ls2\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Data compression and other settings: Configure as needed.\
\ls2\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 NFS exports: This is where you control access.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa160\partightenfactor0
\ls2\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Click "Add client configuration."\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa160\partightenfactor0
\ls2\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Client addresses: Enter the private IP address of your Red Hat Linux instance. For more flexibility, you can use a CIDR range (e.g., 
\fs28 \cf3 \cb4 \strokec3 10.0.1.0/24
\fs32 \cf2 \cb1 \strokec2 ) or 
\fs28 \cf3 \cb4 \strokec3 *
\fs32 \cf2 \cb1 \strokec2  (asterisk for all clients, less secure, use with caution and rely on security groups). It's best to be specific.\
\ls2\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 NFS options: Enter 
\fs28 \cf3 \cb4 \strokec3 rw,no_root_squash
\fs32 \cf2 \cb1 \strokec2 .\
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sa160\partightenfactor0
\ls2\ilvl3
\fs28 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 rw
\fs32 \cf2 \cb1 \strokec2 : Allows read and write access.\
\ls2\ilvl3
\fs28 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 no_root_squash
\fs32 \cf2 \cb1 \strokec2 : This is important if you intend to set permissions on the share as root from the client 
\f1\i after
\f0\i0  mounting. If 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2  itself will be creating all files and has a non-root UID, and the directory permissions are set correctly on the server-side (which is less direct with OpenZFS initial setup without mounting first), 
\fs28 \cf3 \cb4 \strokec3 root_squash
\fs32 \cf2 \cb1 \strokec2  (default if 
\fs28 \cf3 \cb4 \strokec3 no_root_squash
\fs32 \cf2 \cb1 \strokec2  or 
\fs28 \cf3 \cb4 \strokec3 all_squash
\fs32 \cf2 \cb1 \strokec2  is not specified) might be acceptable, but 
\fs28 \cf3 \cb4 \strokec3 no_root_squash
\fs32 \cf2 \cb1 \strokec2  gives more control initially.\
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sa160\partightenfactor0
\ls2\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You might also consider 
\fs28 \cf3 \cb4 \strokec3 sync
\fs32 \cf2 \cb1 \strokec2  for data integrity, though 
\fs28 \cf3 \cb4 \strokec3 async
\fs32 \cf2 \cb1 \strokec2  can offer better performance (with minor risk on server crash before data is flushed). Default is usually 
\fs28 \cf3 \cb4 \strokec3 sync
\fs32 \cf2 \cb1 \strokec2 .\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Click "Create volume."\
\pard\pardeftab720\sa160\partightenfactor0
\cf2 Phase 2: Configure the Red Hat Linux Instance\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ensure 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2  Exists and Get its UID/GID:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls3\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Log in to your Red Hat Linux instance.\
\ls3\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2  doesn't exist, create it: 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 sudo adduser etmuser\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 sudo passwd etmuser \cf7 \strokec7 # Set a password if needed\cf3 \strokec3 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls3\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find the UID and GID of 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2 : 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 id etmuser\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \uc0\u8232 Note down the 
\fs28 \cf3 \cb4 \strokec3 uid=<number>(etmuser)
\fs32 \cf2 \cb1 \strokec2  and 
\fs28 \cf3 \cb4 \strokec3 gid=<number>(etmusergroup)
\fs32 \cf2 \cb1 \strokec2 . Let's assume UID is 
\fs28 \cf3 \cb4 \strokec3 1001
\fs32 \cf2 \cb1 \strokec2  and GID is 
\fs28 \cf3 \cb4 \strokec3 1001
\fs32 \cf2 \cb1 \strokec2 .\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Install NFS Utilities:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls3\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If not already installed, install the necessary NFS client packages: 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 sudo yum install -y nfs-utils\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Start NFS Services (if not running):\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls3\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 On RHEL 7/8/9, enable and start the 
\fs28 \cf3 \cb4 \strokec3 nfs-client.target
\fs32 \cf2 \cb1 \strokec2  (which pulls in 
\fs28 \cf3 \cb4 \strokec3 rpcbind
\fs32 \cf2 \cb1 \strokec2  or 
\fs28 \cf3 \cb4 \strokec3 rpc-statd
\fs32 \cf2 \cb1 \strokec2  as needed for older NFS versions, though NFSv4+ is less reliant on 
\fs28 \cf3 \cb4 \strokec3 rpcbind
\fs32 \cf2 \cb1 \strokec2  for the mount itself). For NFSv4, 
\fs28 \cf3 \cb4 \strokec3 rpcbind
\fs32 \cf2 \cb1 \strokec2  is not strictly necessary for the core protocol but auxiliary services might use it. 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 sudo systemctl \cf8 \strokec8 enable\cf3 \strokec3  nfs-client.target\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 sudo systemctl start nfs-client.target\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 # You might also need to ensure rpcbind is running if using older NFS versions or some tools expect it.\cf3 \strokec3 \
\ls3\ilvl1\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 # sudo systemctl enable rpcbind\cf3 \strokec3 \
\ls3\ilvl1\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 # sudo systemctl start rpcbind\cf3 \strokec3 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls3\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Verify the service: 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 sudo systemctl status nfs-client.target\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create a Local Mount Point:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls3\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create a directory where you will mount the FSx share: 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 sudo mkdir /mnt/fsx_share\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mount the FSx NFS Share:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls3\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Get the DNS name or IP address of your FSx for OpenZFS volume's NFS endpoint. You can find this in the AWS FSx console under your file system -> Volumes -> select your volume -> see "NFS DNS name" or "IP address" in the "Endpoints" panel. The mount path will be this DNS/IP followed by the volume path you defined (e.g., 
\fs28 \cf3 \cb4 \strokec3 :/fsx/mydata
\fs32 \cf2 \cb1 \strokec2 ).\
\ls3\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mount the file system using the NFSv4.1 (recommended) or NFSv3: 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cf7 \cb5 \strokec7 # Example using NFS DNS name and volume path /fsx/mydata\cf3 \strokec3 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 # sudo mount -t nfs -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 FSX_NFS_DNS_NAME_OR_IP:/fsx/mydata /mnt/fsx_share\cf3 \strokec3 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 # For example:\cf3 \strokec3 \
\ls3\ilvl1\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 # fs-0123456789abcdef0.fsx.your-region.amazonaws.com:/fsx/mydata\cf3 \strokec3 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 sudo mount -t nfs -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 your_fsx_volume_dns_name_or_ip:/your_volume_path /mnt/fsx_share\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa160\partightenfactor0
\ls3\ilvl2
\fs28 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 nfsvers=4.1
\fs32 \cf2 \cb1 \strokec2 : Specifies NFS version.\
\ls3\ilvl2
\fs28 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 rsize=1048576,wsize=1048576
\fs32 \cf2 \cb1 \strokec2 : Sets read/write block sizes for performance (check FSx docs for optimal values for your throughput capacity).\
\ls3\ilvl2
\fs28 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 hard
\fs32 \cf2 \cb1 \strokec2 : Makes the mount "hard," meaning NFS operations will retry indefinitely if the server becomes unresponsive.\
\ls3\ilvl2
\fs28 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 timeo=600
\fs32 \cf2 \cb1 \strokec2 : Timeout in deciseconds (60 seconds).\
\ls3\ilvl2
\fs28 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 retrans=2
\fs32 \cf2 \cb1 \strokec2 : Number of retransmissions.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa160\partightenfactor0
\ls3\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Replace 
\fs28 \cf3 \cb4 \strokec3 your_fsx_volume_dns_name_or_ip
\fs32 \cf2 \cb1 \strokec2 , 
\fs28 \cf3 \cb4 \strokec3 /your_volume_path
\fs32 \cf2 \cb1 \strokec2  and 
\fs28 \cf3 \cb4 \strokec3 /mnt/fsx_share
\fs32 \cf2 \cb1 \strokec2  with your actual values. The volume path is the one you specified when creating the volume (e.g., 
\fs28 \cf3 \cb4 \strokec3 /fsx/mydata
\fs32 \cf2 \cb1 \strokec2 ).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Verify the Mount:\uc0\u8232 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 df -hT\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 mount | grep /mnt/fsx_share\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \uc0\u8232 You should see the FSx share mounted.\
\pard\pardeftab720\sa320\partightenfactor0
\cf2 Phase 3: Set Permissions for 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\sa160\partightenfactor0
\cf2 This is where 
\fs28 \cf3 \cb4 \strokec3 no_root_squash
\fs32 \cf2 \cb1 \strokec2  (if you used it on the export) can be helpful.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls4\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Change Ownership/Permissions on the Mounted Share (as root on the client):\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls4\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If you mounted with 
\fs28 \cf3 \cb4 \strokec3 no_root_squash
\fs32 \cf2 \cb1 \strokec2 , the root user on your RHEL instance has root privileges on the mounted share. You can now change the ownership of the mount point's contents (which reflects the root of your FSx volume share) or a subdirectory within it to 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2 .\uc0\u8232 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 sudo chown etmuser:etmuser_group /mnt/fsx_share\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 sudo chmod 750 /mnt/fsx_share \cf7 \strokec7 # Or 770, or 700 depending on needs. 750 gives etmuser rwx, group r-x.\cf3 \strokec3 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \uc0\u8232 Replace etmuser_group with the actual group name of etmuser (often the same as the username).\u8232 If you want etmuser to be able to create files and directories, and other members of etmuser_group to read/write, you might use chmod 770. If only etmuser needs access, chmod 700.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls4\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If root_squash is active (default if no_root_squash was not specified):\uc0\u8232 The root user on the client will be mapped to nobody (or the anonymous UID/GID specified in the export). In this scenario, chown by root on the client might fail or not have the intended effect.\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa160\partightenfactor0
\ls4\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You would need to ensure the default permissions on the FSx volume (when created/exported) are open enough, or use NFSv4 ACLs (more complex) if supported and configured on FSx for OpenZFS.\
\ls4\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Alternatively, ensure the 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2 's UID/GID on the client exactly matches a UID/GID that already has ownership or write permissions on the FSx volume. With a new FSx for OpenZFS volume, the root directory is typically owned by root (UID 0, GID 0).\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa160\partightenfactor0
\ls4\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The simplest approach when 
\fs28 \cf3 \cb4 \strokec3 root_squash
\fs32 \cf2 \cb1 \strokec2  is active is to have the directory permissions on the NFS server side set up such that the specific UID/GID of 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2  can write. For a fresh FSx for OpenZFS volume, its root is owned by UID 0. If 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2  is not UID 0, it won't be able to write directly to the root unless permissions are 
\fs28 \cf3 \cb4 \strokec3 777
\fs32 \cf2 \cb1 \strokec2  (not recommended for the root).\
\ls4\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Therefore, for simplicity in controlling permissions from the client for a specific user, 
\fs28 \cf3 \cb4 \strokec3 no_root_squash
\fs32 \cf2 \cb1 \strokec2  on the export combined with 
\fs28 \cf3 \cb4 \strokec3 chown/chmod
\fs32 \cf2 \cb1 \strokec2  after mounting is often the easiest path for this use case.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls4\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Test Access as 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls4\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Switch to the 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2 : 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 su - etmuser\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls4\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Try to create a file and directory: 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cf8 \cb5 \strokec8 cd\cf3 \strokec3  /mnt/fsx_share\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 touch testfile.txt\
\ls4\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 mkdir testdir\
\ls4\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ls -l\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls4\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls4\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2  can read and write, the setup is successful.\
\pard\pardeftab720\sa160\partightenfactor0
\cf2 Phase 4: Automount on Boot (Optional, Recommended)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls5\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Edit 
\fs28 \cf3 \cb4 \strokec3 /etc/fstab
\fs32 \cf2 \cb1 \strokec2 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls5\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add the following line to 
\fs28 \cf3 \cb4 \strokec3 /etc/fstab
\fs32 \cf2 \cb1 \strokec2  to make the mount persistent across reboots. 
\fs28 \cf3 \cb5 \strokec3 your_fsx_volume_dns_name_or_ip:/your_volume_path /mnt/fsx_share nfs nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev 0 0\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa160\partightenfactor0
\ls5\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The 
\fs28 \cf3 \cb4 \strokec3 _netdev
\fs32 \cf2 \cb1 \strokec2  option is important; it tells the system that this is a network device and should only be mounted after the network is up.\
\ls5\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Make sure there are no spaces within the options string, only commas.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls5\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Test 
\fs28 \cf3 \cb4 \strokec3 fstab
\fs32 \cf2 \cb1 \strokec2  entry (optional but good practice):\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls5\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Unmount the share if it's currently mounted: 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 sudo umount /mnt/fsx_share\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls5\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Then try to mount all entries in 
\fs28 \cf3 \cb4 \strokec3 /etc/fstab
\fs32 \cf2 \cb1 \strokec2 : 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 sudo mount -a\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls5\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Verify it's mounted again: 
\fs28 \cf3 \cb5 \strokec3 Bash\cb1 \uc0\u8232 
\fs48 \cf6 \strokec6 \uc0\u8232 \u8232 \u8232 
\fs28 \cf3 \strokec3 \uc0\u8232 \cb5 df -hT | grep /mnt/fsx_share\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls5\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\pardeftab720\sa160\partightenfactor0
\cf2 Security Considerations:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls6\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Security Groups: Restrict NFS access (port 2049) in your FSx security group to 
\f1\i only
\f0\i0  the necessary EC2 instances or security groups. Similarly, ensure your EC2 instance's outbound rules allow it to connect to the FSx file system on this port.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 NFS Export Policy: In FSx (both OpenZFS and ONTAP), be as specific as possible with client IP addresses in the export policy. Avoid using 
\fs28 \cf3 \cb4 \strokec3 *
\fs32 \cf2 \cb1 \strokec2  (all clients) in production unless absolutely necessary and other network controls are very tight.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls6\ilvl0
\fs28 \cf3 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 no_root_squash
\fs32 \cf2 \cb1 \strokec2 : Use with caution. If not strictly needed for initial permission setup by client-side root, prefer 
\fs28 \cf3 \cb4 \strokec3 root_squash
\fs32 \cf2 \cb1 \strokec2  (the default if 
\fs28 \cf3 \cb4 \strokec3 no_root_squash
\fs32 \cf2 \cb1 \strokec2  isn't specified) and manage permissions via UID/GID matching or by having a common directory created by root (with 
\fs28 \cf3 \cb4 \strokec3 no_root_squash
\fs32 \cf2 \cb1 \strokec2  temporarily) where subdirectories can then be managed by users.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls6\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 User Permissions: Apply the principle of least privilege. Only grant 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2  the permissions it needs on the share.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 NFSv4 ACLs: For more granular control beyond standard UNIX permissions, NFSv4 ACLs can be used if supported by both FSx (OpenZFS/ONTAP typically do) and the client. This is a more advanced topic.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Encryption in Transit: FSx for OpenZFS and ONTAP support encryption in transit if you use Kerberos with NFS. For basic NFS, the data is not encrypted over the wire by default. If this is a requirement, explore Kerberos options or use a VPN/Direct Connect with MACsec. AWS Nitro-based instances provide encryption for traffic within a VPC between instances.\
\pard\pardeftab720\sa320\partightenfactor0
\cf2 Amazon FSx for NetApp ONTAP Alternative:\
\pard\pardeftab720\sa160\partightenfactor0
\cf2 If you choose FSx for ONTAP:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls7\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 FSx Setup: The general AWS console steps for creating the file system and Storage Virtual Machine (SVM) are similar.\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Volume Creation & Junction Path: You'll create a volume within the SVM and set a junction path (e.g., 
\fs28 \cf3 \cb4 \strokec3 /nfsvol1
\fs32 \cf2 \cb1 \strokec2 ).\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Export Policy:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls7\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You'll create or modify an export policy for the SVM or volume.\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rules in the export policy will specify client match (IP/CIDR), allowed protocols (NFS3, NFS4.1), and access modes (read-write).\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You can also control 
\fs28 \cf3 \cb4 \strokec3 superuser
\fs32 \cf2 \cb1 \strokec2  access (similar to 
\fs28 \cf3 \cb4 \strokec3 root_squash
\fs32 \cf2 \cb1 \strokec2  options). 
\fs28 \cf3 \cb5 \strokec3 # Example ONTAP CLI commands (run via SSH to FSx for ONTAP management endpoint)\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls7\ilvl1\cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 # To create a new export policy\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 # ::> vserver export-policy create -vserver your_svm_name -policyname my_nfs_policy\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 # To add a rule\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 # ::> vserver export-policy rule create -vserver your_svm_name -policyname my_nfs_policy -ruleindex 1 -protocol nfs4 -clientmatch YOUR_RHEL_IP_OR_CIDR -rorule sys -rwrule sys -superuser sys\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 # (Here 'sys' for -superuser implies no root squashing effectively for matched clients)\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 # To apply the policy to a volume\
\ls7\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 # ::> volume modify -vserver your_svm_name -volume your_volume_name -policy my_nfs_policy\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls7\ilvl1\cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\fs32 \cf2 \strokec2 \uc0\u8232 \u8232 \cb5 \uc0\u8232 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls7\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Client Side: Mounting steps on Red Hat Linux are identical (using the SVM's NFS IP/DNS name and the volume's junction path).\
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Permissions: Similar principles for 
\fs28 \cf3 \cb4 \strokec3 chown
\fs32 \cf2 \cb1 \strokec2 /
\fs28 \cf3 \cb4 \strokec3 chmod
\fs32 \cf2 \cb1 \strokec2  after mounting apply, depending on the superuser/root squash settings in your export policy.\
\pard\pardeftab720\sa320\partightenfactor0
\cf2 By following these steps, you should be able to successfully set up an AWS FSx file system for NFS access by your 
\fs28 \cf3 \cb4 \strokec3 etmuser
\fs32 \cf2 \cb1 \strokec2  on a Red Hat Linux instance. Remember to always consult the latest AWS documentation for FSx for OpenZFS or ONTAP for any specific details or updated procedures.\
}